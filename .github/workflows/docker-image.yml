name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@2.30.4
        with:
          php-version: '8.3'

      - uses: actions/checkout@v4.1.4

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      #- name: Define docker ENV
      #  run: |
      #    echo "WWWGROUP=1000" >> "$GITHUB_ENV"
      #    echo "WWWUSER=1000" >> "$GITHUB_ENV"

      - name: Build image
        run: |
          docker compose build
      #    php artisan env:decrypt --key ${{ secrets.ENV_KEY }}
      #    docker compose build

      - name: Docker login
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Define tag version
        id: date
        run: echo "TAG=$(date +'%s')" >> "$GITHUB_ENV"

      - name: Docker clone image with tag
        run: docker tag alangiacomin/k8s-app:latest alangiacomin/k8s-app:$TAG
      - name: Docker clone image with tag
        run: docker tag alangiacomin/k8s-app-queue:latest alangiacomin/k8s-app-queue:$TAG

      - name: Docker push image latest
        run: docker push alangiacomin/k8s-app:latest
      - name: Docker push image latest
        run: docker push alangiacomin/k8s-app-queue:latest

      - name: Docker push image tag
        run: docker push alangiacomin/k8s-app:$TAG
      - name: Docker push image tag
        run: docker push alangiacomin/k8s-app-queue:$TAG

      - name: Checkout K8S repository
        uses: actions/checkout@v4.1.4
        with:
          repository: alangiacomin/myapp
          ref: master
          token: ${{ secrets.GH_PAT_TOKEN }}

      - name: Update deployment image
        run: sed -i 's|alangiacomin/k8s-app.*|alangiacomin/k8s-app:'$TAG'|' "$GITHUB_WORKSPACE/apps/k8sapp/deployment.yaml"
      - name: Update deployment image
        run: sed -i 's|alangiacomin/k8s-app-queue.*|alangiacomin/k8s-app-queue:'$TAG'|' "$GITHUB_WORKSPACE/apps/k8sapp/deployment.yaml"

      - name: Git Auto Commit
        # You may pin to the exact commit or the version.
        # uses: stefanzweifel/git-auto-commit-action@3ea6ae190baf489ba007f7c92608f33ce20ef04a
        uses: stefanzweifel/git-auto-commit-action@v5.0.1
        with:
          # Commit message
          #commit_message: # optional, default is Apply automatic changes
          # Git branch name, where changes should be pushed too. Required if Action is used on the `pull_request` event
          #branch: # optional, default is ${{ github.head_ref }}
          # Commit options (eg. --no-verify)
          #commit_options: # optional, default is
          # Add options (eg. -u)
          #add_options: # optional, default is
          # Status options (eg. --untracked-files=no)
          #status_options: # optional, default is
          # File pattern used for `git add`. For example `src/*.js`
          #file_pattern: # optional, default is .
          # Local file path to the git repository. Defaults to the current directory (`.`)
          #repository: # optional, default is .
          # Name used for the commit user
          commit_user_name: alangiacomin # optional, default is github-actions[bot]
          # Email address used for the commit user
          commit_user_email: alan.giacomin@gmail.com # optional, default is 41898282+github-actions[bot]@users.noreply.github.com
          # Value used for the commit author. Defaults to the username of whoever triggered this workflow run.
          commit_author: 'Alan Giacomin' # optional, default is ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          # Message used to create a new git tag with the commit. Keep this empty, if no tag should be created.
          #tagging_message: # optional, default is
          # Push options (eg. --force)
          #push_options: # optional, default is
          # Skip the check if the git repository is dirty and always try to create a commit.
          #skip_dirty_check: # optional
          # Skip the call to git-fetch.
          #skip_fetch: # optional
          # Skip the call to git-checkout.
          #skip_checkout: # optional
          # Stop the shell from expanding filenames (https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html)
          #disable_globbing: # optional
          # Create new branch with the name of `branch`-input in local and remote repository, if it doesn't exist yet.
          #create_branch: # optional
          # Internal use only! Path to git binary used to check if git is available. (Don't change this!)
          #internal_git_binary: # optional, default is git
